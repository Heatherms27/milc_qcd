#  Schroedinger functional simulation for pure gauge SU3
#  MIMD version 6
#
#  Generic make-include file for pure_gauge codes
#  This template file defines rules and macros common to all architectures
#  It is intended to be an include file for other Makefiles.
#  Don't use it by itself!
#
#	"make su3_schr_rmd" uses the refreshed molecular dynamics algorithm
#	"make su3_schr_phi" uses phi algorithm.
#	"make su3_schr_hmc" uses hybrid Monte Carlo algorithm.
#	"make su3_schr_sw_phi" uses phi algorithm with Sexton-Weingarten
#			    updating.
#	"make su3_schr_sw_hmc" uses hybrid Monte Carlo algorithm with S-W.
#	"make su3_schr_rw_rmd" uses RMD with coupling reweighting
#	"make su3_schr_rw_phi" uses PHI with coupling reweighting
#	"make su3_schr_rw_hmc" uses HMC with coupling reweighting
#	"make su3_schr_rmd_ph" uses RMD with fermion phases
#	"make su3_schr_phi_ph" uses PHI with fermion phases
#	"make su3_schr_hmc_ph" uses HMC with fermion phases
#

MYINCLUDEDIR = .
INCLUDEDIR = ../include
#Where the complex and su3 libraries are
LIBDIR = ../libraries

# To force a remake when changing headers

GLOBAL_HEADERS = \
  ${INCLUDEDIR}/config.h \
  ${INCLUDEDIR}/complex.h \
  ${INCLUDEDIR}/su3.h \
  ${INCLUDEDIR}/comdefs.h \
  ${INCLUDEDIR}/macros.h \
  ${INCLUDEDIR}/generic.h \
  ${INCLUDEDIR}/generic_schroed.h \
  ${INCLUDEDIR}/loopend.h \
  ${INCLUDEDIR}/io_lat.h

MY_HEADERS = \
  lattice.h \
  params.h \
  defines.h \
  schroed_ks_includes.h \
  ${ADDHEADERS}

HEADERS = ${GLOBAL_HEADERS} ${MY_HEADERS}

# Choose one of the lattice layout algorithms:
LAYOUT = layout_hyper

# All required object files
# Basic set from current directory
MY_OBJECTS =         \
  control.o          \
  setup.o            \
  update_u.o         \
  update_h.o         \
  f_measure.o        \
  gauge_info.o
# Basic set from generic directory
G_OBJECTS =          \
  ${LAYOUT}.o        \
  check_unitarity.o  \
  io_helpers.o       \
  ${IO_LAT_REAL}     \
  make_lattice.o     \
  plaquette4.o       \
  d_plaq2.o          \
  ranstuff.o         \
  ranmom.o           \
  reunitarize2.o
# Basic set from generic_ks directory
G_KS_OBJECTS = \
  grsource.o \
  d_congrad5.o
# Basic set from generic_schroed directory
G_SCHROED_OBJECTS =  \
  coupling.o         \
  make_schroed_lattice.o

# To these we add project-specific extra objects and machine-dependent objects
OBJECTS = ${MY_OBJECTS} ${G_OBJECTS} ${G_KS_OBJECTS} ${G_SCHROED_OBJECTS} \
  ${EXTRA_OBJECTS} ${MACHINE_DEP}

#Libraries for complex numbers and su3 functions
QCDLIB = ${LIBDIR}/su3.a ${LIBDIR}/complex.a

# Default rule for C compilation
.c.o:
	${CC} -c ${CFLAGS} $<

# All make files used in this compilation
ALL_MAKES = Make_template ../generic/Make_template \
  ../generic_ks/Make_template ../generic_schroed/Make_template \
  ${MAKEFILE} ../include/Make_template

# To force a full remake when changing targets
LASTMAKE = .lastmake.${MAKEFILE}.${MYTARGET}

${LASTMAKE}: ${ALL_MAKES}
	-/bin/rm -f .lastmake.*
	${MAKE} -f ${MAKEFILE} clean
	touch ${LASTMAKE}

# All objects should depend on these
ALL_DEPEND = ${LASTMAKE} ${HEADERS} ${ALL_MAKES}

${OBJECTS}: ${ALL_DEPEND}

##### Targets:

su3_schr_rmd::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= " \
	"EXTRA_OBJECTS= update.o"

su3_schr_phi::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DPHI_ALGORITHM" \
	"EXTRA_OBJECTS= update.o"

su3_schr_hmc::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DPHI_ALGORITHM -DHMC_ALGORITHM" \
	"EXTRA_OBJECTS= d_action.o update.o"

# The next target is included for completeness, but is untested
su3_schr_sw_phi::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DPHI_ALGORITHM -DSEXT_WEIN" \
	"EXTRA_OBJECTS= update_hgh.o"

su3_schr_sw_hmc::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DPHI_ALGORITHM -DHMC_ALGORITHM -DSEXT_WEIN" \
	"EXTRA_OBJECTS= d_action.o update_hgh.o"

su3_schr_rmd_ph::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DFERM_PHASES" \
	"EXTRA_OBJECTS= update.o"

# The next target is included for completeness, but is untested
su3_schr_phi_ph::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DFERM_PHASES -DPHI_ALGORITHM" \
	"EXTRA_OBJECTS= update.o"

# The next target is included for completeness, but is untested
su3_schr_hmc_ph::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DFERM_PHASES -DPHI_ALGORITHM -DHMC_ALGORITHM" \
	"EXTRA_OBJECTS= d_action.o update.o"

su3_schr_rw_rmd::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DREWEIGH" \
	"EXTRA_OBJECTS= update.o"

# The next target is included for completeness, but is untested
su3_schr_rw_phi::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DREWEIGH -DPHI_ALGORITHM" \
	"EXTRA_OBJECTS= update.o"

# The next target is included for completeness, but is untested
su3_schr_rw_hmc::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DREWEIGH -DPHI_ALGORITHM -DHMC_ALGORITHM" \
	"EXTRA_OBJECTS= d_action.o update.o"

clean:
	-/bin/rm -f *.o


# Rules for generic routines
include ../generic/Make_template

# Rules for generic_ks routines
include ../generic_ks/Make_template

# Rules for generic_schroed routines
include ../generic_schroed/Make_template

# Rules for header files
include ../include/Make_template

libmake:
	@echo Building libraries with ${MAKELIBRARIES}
	cd ${LIBDIR} ;\
	${MAKE} -f ${MAKELIBRARIES} "APP_CC=${CC}" all

localmake: ${OBJECTS} ${QCDLIB}
	${LD} ${LDFLAGS} -o ${MYTARGET} \
	${OBJECTS} ${QCDLIB} ${ILIB} -lm
	touch localmake

target: libmake localmake 
