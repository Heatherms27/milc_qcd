#  MIMD version 6
#  Standard application makefile for generic scalar workstation
#  Do not use for making libraries

#  Edit options below
#  Copy this file into the application directory and run make there.
#

MAKEFILE = Make_vanilla
COMMTYPE = VANILLA

#----------------------------------------------------------------------
#  User choices - edit to suit 
#----------------------------------------------------------------------
# 1. Compiler
CC               = gcc   # ( cc89 gcc xlc gcc pgcc cl g++ )

#----------------------------------------------------------------------
# 2. Compiler optimization level
OPT              = -O3 -Wall # ( -g -O, etc )

#----------------------------------------------------------------------
# 3. Other compiler optimization flags.  Uncomment stanza to suit.
#-------------- Gnu C -------------------------------------
#OCFLAGS =                # ( -Wall, etc )
#OCFLAGS =  -fexpensive-optimizations  -fpeephole -fstrength-reduce -march=i586  # Simone's pick for PIII/gcc version 2.95.2.1 19991024 (release)
#OCFLAGS = -fexpensive-optimizations -funroll-loops -fpeephole -fstrength-reduce -fschedule-insns2 -march=i586 # works best for matrix x vector
#OCFLAGS =  -march=pentium4 -mfpmath=sse -funroll-loops -fprefetch-loop-arrays -fomit-frame-pointer # J. Osborn 10/20/04
#OCFLAGS =  -march=pentium4 -funroll-loops -fprefetch-loop-arrays -fomit-frame-pointer # J. Osborn 10/24/04
#-------------- Intel icc -----------------------------------
#OCFLAGS = -tpp7 -static

#-------------- Portland Group ----------------------------
#OCFLAGS = -tp p6 -Munroll=c:4,n:4
#OCFLAGS= -mpentiumpro -march=pentiumpro -funroll-all-loops -malign-double -D_REENTRANT  # Pentium pro

#-------------- SUN SPARC ---------------------------------
#OCFLAGS= -fast -dalign -xlibmil  -xlibmopt -xtarget=native-fsimple=2 -fns -xprefetch #Ultra (use OPT=-O4 or none)

#-------------- IBM RS6000 --------------------------------
#CARCH = -qarch=pwr3 -qtune=pwr3   # Architecture: ( ppc pwr2 )
#OCFLAGS= ${CARCH} -bmaxdata:0x40000000 -bmaxstack:0x8000000

#-------------- MIPS --------------------------------------
#OCFLAGS= -f 

#-------------- SGI Origin single node  -------------------
#OCFLAGS=  -DSGI -mips4 -r10000 -OPT:IEEE_arithmetic=3:roundoff=3:alias=restrict -TENV:X=1   # (would -64 work??)

#-------------- DEC Alpha ---------------------------------
#OCFLAGS = -DT3E -float -fptm n 

#-------------- Convex Exemplar ----------------------------
#OCFLAGS = +Oinfo +Onofltacc +Oaggressive +Onoautopar 	#NPACI Exemplar

#-------------- NT cl compiler -----------------------------
#OCFLAGS = -Fo$*.o -Ox -Oa -G6

#----------------------------------------------------------------------
# 4. Choose large file support
#CLFS = -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE64 # Large files gcc only
#CLFS = -D_LARGE_FILES   #  RS6000
CLFS =                   #  Not researched for others

#----------------------------------------------------------------------
# 5. I/O routines
# Both io_nonansi and io_ansi should work on a scalar machine
# Solaris 2.6 gave "bad file number" errors with io_ansi.  CD
MACHINE_DEP_IO   = io_nonansi.o # (io_ansi.o io_nonansi.o)

HAVEQIO = true
#HAVEQIO =    # If we don't want QIO, leave blank

#----------------------------------------------------------------------
# 6. QDP/C options

#  *** edit these locations ***
SCIDAC = ${HOME}/scidac
QIO = $(SCIDAC)/qio
QMP = ${SCIDAC}/qmp-single
QDP = ${SCIDAC}/qdp
QLA = ${SCIDAC}/qla

# shouldn't need to change this

IQMP = -I${QMP}/include
LQMP = -L$(QMP)/lib -lqmp

IQIO = -I${QIO}/include
LQIO = -L${QIO}/lib -lqio -llime 

IQLA = -I${QLA}/include
LQLA = -L${QLA}/lib -lqla_int -lqla_f -lqla_f3 -lqla_df -lqla_d3 -lqla_df3 \
          -lqla_dq3 -lqla_q3 -lqla_d -lqla_dq -lqla_q -lqla_random

IQDP = -I${QDP}/include
LQDP = -L${QDP}/lib -lqdp_int -lqdp_f -lqdp_f3 -lqdp_d -lqdp_d3 -lqdp_common

ifdef HAVEQIO
  LIBQIO = ${LQIO} ${LQMP}
  INCQIO = ${IQIO} ${IQMP}
endif

INCQDP = ${IQDP} ${IQLA} ${IQIO} ${IQMP}
LIBQDP = ${LQDP} ${LQLA} ${LQIO} ${LQMP}

#----------------------------------------------------------------------
# 6. Linker
LD               = ${CC}

#----------------------------------------------------------------------
# 7. Extra linker flags
LDFLAGS          =    # most
#LDFLAGS          = -fast     # Sun SPARC

#----------------------------------------------------------------------
# 8. Extra load libraries
ILIB             =  ${LIBQIO} # ${LIBQDP}

#----------------------------------------------------------------------
# 9. Code alternatives 

# 1: single precision; 2: double
PRECISION = 2
CODETYPE   = -DINLINE -DNOPREFETCH -DPRECISION=${PRECISION} -DSSE -DSSE_INLINE -DP4

#----------------------------------------------------------------------
# 10. Choose MILC library make file in libraries directory.  
#    CHECK IT FOR FURTHER OPTIONS!
#MAKELIBRARIES = Make_RS6K    # IBM RS6000 assembly code
#MAKELIBRARIES = Make_t3e     # Cray T3E assembly code
#MAKELIBRARIES = Make_alpha   # DEC alpha assembly code
# Don't use -DSSE with Make_SSE_nasm
#MAKELIBRARIES = Make_SSE_nasm # SSE nasm assembly code for P3, P4
MAKELIBRARIES = Make_vanilla  # Generic.

#----------------------------------------------------------------------
# End of user choices.  PLEASE, ALSO, CHECK include/config.h.
#----------------------------------------------------------------------

# Routines that depend on both application and architecture
MACHINE_DEP = com_vanilla.o ${MACHINE_DEP_IO}

# Complete set of compiler flags - do not change
CFLAGS = ${OPT} ${OCFLAGS} -D${COMMTYPE} ${CODETYPE} ${CLFS} ${CMPI} \
	${INCQIO} -I${MYINCLUDEDIR} ${DEFINES}

include Make_template


