#  Kogut-Susskind fermions with improved actions
#  MIMD version 7
#  "ks_imp3", started 1/22/99, streamline ks_imp2
#
#  Generic make-include file for ks_imp_dyn1 AND ks_imp_dyn2 codes
#  Use -DONEMASS to build for a single degenerate quark mass
#  Otherwise the build assumes two quark masses.
#
#  This template file defines rules and macros common to all architectures
#  It is intended to be an include file for other Makefiles.
#  Don't use it by itself!
#
#	"make su3_rmd" used the refreshed molecular dynamics algorithm
#		for the Symanzik 1 loop gauge action and Asqtad quark action
#	"make su3_rmd1" Same, but for one degenerate quark mass
#
#	"make su3_spectrum" uses the refreshed molecular dynamics
#	        algorithm with the su3_rmd action and does spectrum
#	        measurements
#	"make su3_spectrum1" Same, but for one degenerate quark mass
#
#	"make su3_hybrids" uses the refreshed molecular dynamics
#	        algorithm with the su3_rmd action and does spectrum
#	        measurements, including the hybrid spectrum
#	"make su3_hybrids1" Same, but for one degenerate quark mass
#
#       See examples below for naming and building targets for
#               other actions

MYINCLUDEDIR = .
INCLUDEDIR = ../include
#Where the complex and su3 libraries are
LIBDIR = ../libraries

GLOBAL_HEADERS = ${INCLUDEDIR}

INLINE_HEADERS = \
  ../sse/include/ \
  ../sse2/include/ \
  ../libraries/include/

MY_HEADERS = \
  lattice.h \
  params.h \
  defines.h \
  ks_imp_includes.h

HEADERS = ${GLOBAL_HEADERS} ${MY_HEADERS} ${INLINE_HEADERS} ${SCIDAC_HEADERS}

MY_OBJECTS= \
  control.o \
  gauge_info.o \
  setup.o \
  update_h.o \
  update_u.o

G_OBJECTS0 = \
  check_unitarity.o \
  d_plaq4.o \
  gaugefix2.o \
  gauge_stuff.o \
  io_detect.o \
  io_helpers.o \
  io_lat4.o \
  make_lattice.o \
  path_product.o \
  ranmom.o \
  ranstuff.o \
  remap_stdio_from_args.o \
  reunitarize2.o

ifeq ($(strip ${QCDOC}),true)
  G_OBJECTS1 = ${G_OBJECTS0} ploop2.o
else
  G_OBJECTS1 = ${G_OBJECTS0} ploop3.o
endif

ifeq ($(strip ${HAVEQIO}),true)
  G_OBJECTS = ${G_OBJECTS1} io_scidac.o
else
  G_OBJECTS = ${G_OBJECTS1}
endif

G_KS_OBJECTS = \
  f_meas.o \
  grsource_imp.o \
  mat_invert.o \
  quark_stuff.o \
  rephase.o

SPECTRUM_OBJECTS = \
  ape_smear.o \
  flavor_ops.o \
  fpi_2.o \
  hvy_pot.o \
  nl_spectrum.o \
  project_su3_hit.o \
  spectrum2.o \
  spectrum_mom.o \
  spectrum_multimom.o \
  spectrum_nd.o \
  spectrum_nlpi2.o \
  spectrum_singlets.o

# Objects depending on architecture and software package 

# Layout
ifeq ($(strip ${QCDOC}),true)
  LAYOUT = layout_qcdoc.o # Required
else
  ifeq ($(strip ${HAVEQDP}),true)
    LAYOUT = layout_qdp.o # Required
  else
    LAYOUT = layout_hyper_prime.o # Choices possible here
  endif
endif

# Choose non-QDP FN dslash (dslash_fn.o dslash_fn2.o dslash_fn_dblstore.o )
DSLASH_FN = dslash_fn2.o

ifeq ($(strip ${HAVEQOP}),true)
  CONGRAD_FN = d_congrad5_fn_qop_two_src.o d_congrad5_fn_qop.o
else
  # Choose non_QDP FN conjugate gradient algorithm (d_congrad5_fn.o
  # or d_congrad5_fn_fewsums.o)
  CONGRAD_FN = d_congrad5_two_src.o d_congrad5_fn.o
endif

ifeq ($(strip ${QCDOC}),true)
  QCDOC_OBJECTS = qcdoc_alloc.o
endif

ifeq ($(strip ${HAVEQDP}),true)
  QDP_OBJECTS = stuff_qdp.o
  INV_FN_OBJECTS = d_congrad5_two_src.o d_congrad5_fn_qdp.o ${DSLASH_FN} dslash_fn_qdp.o 
  MULTI_INV_FN = ks_multicg_qdp.o
# Choose (fermion_force_asqtad_qdp.o )
  ASQFORCE = fermion_force_asqtad_qdp.o
else
  INV_FN_OBJECTS = ${CONGRAD_FN} ${DSLASH_FN}
  MULTI_INV_FN = ks_multicg.o
# Choose (fermion_force_asqtad.o fermion_force_asqtad2.o )
  ASQFORCE = fermion_force_asqtad3.o ff_opt.o
endif

INV_EO_OBJECTS = d_congrad5_eo.o dslash_eo.o
MULTI_INV_EO = ks_multicg.o

ADD_OBJECTS = ${MACHINE_DEP_IO} ${COMMPKG} ${QCDOC_OBJECTS} ${QDP_OBJECTS} \
   ${SCIDAC_OBJECTS}

OBJECTS = ${MY_OBJECTS} ${G_OBJECTS} ${G_KS_OBJECTS} ${LAYOUT} \
  ${ADD_OBJECTS} ${EXTRA_OBJECTS}

#Libraries for complex numbers and su3 functions
QCDLIB = ${LIBDIR}/su3.${PRECISION}.a ${LIBDIR}/complex.${PRECISION}.a 

LIBRARIES = ${QCDLIB} ${SCIDAC_LIBRARIES}

# Default rule for C compilation
.c.o: ; ${CC} -c ${CFLAGS}  $*.c 

# To force a full remake when changing targets
LASTMAKE = .lastmake.${MAKEFILE}.${PRECISION}.${MYTARGET}

${LASTMAKE}:
	-/bin/rm -f .lastmake.*
	/bin/rm -f .lastmake.* quark_action.h gauge_action.h
	${MAKE} -f ${MAKEFILE} clean
	touch ${LASTMAKE}

ALL_MAKES = \
   Make_template \
   ${MAKEFILE} \
   ../Make_template_scidac \
   ../generic/Make_template \
   ../generic_ks/Make_template

# To force a remake when changing any make file, header, or target
${OBJECTS} : ${HEADERS} ${LASTMAKE} ${ALL_MAKES}

quark_stuff.o: quark_action.h 
gauge_stuff.o: gauge_action.h 
gauge_info.o:  quark_action.h

# Directories where we store the improved action headers
QUARKIMP = ../generic_ks/imp_actions
GAUGEIMP = ../generic/imp_actions

quark_action.h: ${QUARKIMP}/${QUARK}
	/bin/cp ${QUARKIMP}/${QUARK} quark_action.h

gauge_action.h: ${GAUGEIMP}/${GAUGE}
	/bin/cp ${GAUGEIMP}/${GAUGE} gauge_action.h


########################################################
# Optional DEFINES for timing:
# -DCGTIME for cg timing and iterations
# -DGFTIME for gauge force timing
# -DFFTIME for fermion force timing
# -DLLTIME for long link timing

# Optional DEFINES for pbp estimates
# -DNPBP_REPS Number of repeated evaluations of stochastic 
#       psi-bar-psi

# Optional DEFINES for EOS
# -DDM_DU0 for calculating deriv of action wrto u0

# Optional DEFINES for quark number susceptibility
# -DCHEM_POT

ifeq ($(strip ${QCDOC}),true)
  DQCDOC = -DQCDOC
endif

ifeq ($(strip ${HAVEQMP}),true)
  DHAVE_QMP = -DHAVE_QMP
endif

ifeq ($(strip ${HAVEQIO}),true)
  DHAVE_QIO = -DHAVE_QIO
endif

ifeq ($(strip ${HAVEQDP}),true)
  DHAVE_QDP = -DHAVE_QDP
endif

DARCH = ${DQCDOC} ${DHAVE_QMP} ${DHAVE_QIO} ${DHAVE_QDP}

##### Targets:
#		("FN" = "fat+Naik")

#	-DNPBP_REPS=10" \
# 	-DCGTIME -DFFTIME -DGFTIME -DLLTIME" \
#       -DONEMASS
#	-DQIO_TRELEASE=2.0

su3_rmd::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DFN -DCOM_QMP_CRC" \
	"GAUGE = symanzik_1loop_action.h" \
	"QUARK = asqtad_action.h" \
	"EXTRA_OBJECTS= ${INV_FN_OBJECTS} ${ASQFORCE} update.o"

su3_rmd1::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DFN  -DONEMASS" \
	"GAUGE = symanzik_1loop_action.h" \
	"QUARK = asqtad_action.h" \
	"EXTRA_OBJECTS= ${INV_FN_OBJECTS} ${ASQFORCE} update_onemass.o"

su3_rmd_eos::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DFN  -DDM_DU0 -DNPBP_REPS=4" \
	"GAUGE = symanzik_1loop_action.h" \
	"QUARK = asqtad_action.h" \
	"EXTRA_OBJECTS= ${INV_FN_OBJECTS} ${ASQFORCE} update.o"

su3_rmd_eos1::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DFN  -DDM_DU0 -DNPBP_REPS=4 -DONEMASS" \
	"GAUGE = symanzik_1loop_action.h" \
	"QUARK = asqtad_action.h" \
	"EXTRA_OBJECTS= ${INV_FN_OBJECTS} ${ASQFORCE} update_onemass.o"

su3_rmd_susc::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DFN  -DNPBP_REPS=4 -DCHEM_POT" \
	"GAUGE = symanzik_1loop_action.h" \
	"QUARK = asqtad_action.h" \
	"EXTRA_OBJECTS= ${INV_FN_OBJECTS} ${ASQFORCE} update.o"

su3_rmd_dblstore_gath13_fewsums::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DFN  -DDBLSTORE_FN -DFN_GATHER13" \
	"GAUGE = symanzik_1loop_action.h" \
	"QUARK = asqtad_action.h" \
	"EXTRA_OBJECTS= ${ASQFORCE} d_congrad5_two_src.o \
	d_congrad5_fn_fewsums.o dslash_fn_dblstore.o update.o"

su3_hmc::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DFN  \
	-DPHI_ALGORITHM -DHMC_ALGORITHM" \
	"GAUGE = symanzik_1loop_action.h" \
	"QUARK = asqtad_action.h" \
	"EXTRA_OBJECTS= ${INV_FN_OBJECTS} ${ASQFORCE} \
	d_action.o update.o"

su3_hmc1::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DFN  -DONEMASS \
	-DPHI_ALGORITHM -DHMC_ALGORITHM" \
	"GAUGE = symanzik_1loop_action.h" \
	"QUARK = asqtad_action.h" \
	"EXTRA_OBJECTS= ${INV_FN_OBJECTS} ${ASQFORCE} \
	d_action.o update_onemass.o"

su3_rmd_naive::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DEO  -DONEMASS" \
	"GAUGE = plaquette_action.h" \
	"QUARK = onelink_action.h" \
	"EXTRA_OBJECTS= ${INV_EO_OBJECTS} fermion_force_general.o update_onemass.o"

# The following target is a superset of su3_spectrum

su3_hybrids::
	make -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DFN 	-DSPECTRUM -DHYBRIDS" \
	"GAUGE = symanzik_1loop_action.h" \
	"QUARK = asqtad_action.h" \
	"EXTRA_OBJECTS= ${INV_FN_OBJECTS} ${ASQFORCE} \
	${MULTI_INV_FN} \
	field_strength.o spectrum_hybrids5.o update.o \
	${SPECTRUM_OBJECTS}"

su3_hybrids1::
	make -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DFN 	-DSPECTRUM -DHYBRIDS -DONEMASS" \
	"GAUGE = symanzik_1loop_action.h" \
	"QUARK = asqtad_action.h" \
	"EXTRA_OBJECTS= ${INV_FN_OBJECTS} ${ASQFORCE} \
	${MULTI_INV_FN} \
	field_strength.o spectrum_hybrids5.o update_onemass.o \
	${SPECTRUM_OBJECTS}"

# The following target will not do hybrids

su3_spectrum::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DFN 	-DSPECTRUM" \
	"GAUGE = symanzik_1loop_action.h" \
	"QUARK = asqtad_action.h" \
	"EXTRA_OBJECTS= ${INV_FN_OBJECTS} ${ASQFORCE} \
	${MULTI_INV_FN} ${SPECTRUM_OBJECTS} update.o"


su3_spectrum1::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DFN 	-DSPECTRUM -DONEMASS" \
	"GAUGE = symanzik_1loop_action.h" \
	"QUARK = asqtad_action.h" \
	"EXTRA_OBJECTS= ${INV_FN_OBJECTS} ${ASQFORCE} \
	${MULTI_INV_FN} ${SPECTRUM_OBJECTS} update_onemass.o"


# The following stanzas illustrate how to create targets for alternative
# choices of quark and gauge actions

su3_rmd_eo_symzk1_fat7tad::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DEO " \
	"GAUGE = symanzik_1loop_action.h" \
	"QUARK = fat7tad_action.h" \
	"EXTRA_OBJECTS= ${INV_EO_OBJECTS} \
	fermion_force_general.o update.o"

su3_rmd_plaq_fat7naik::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DFN " \
	"GAUGE = plaquette_action.h" \
	"QUARK = fat7naik_action.h" \
	"EXTRA_OBJECTS= ${INV_FN_OBJECTS} \
	fermion_force_general.o update.o"

su3_rmd_plaq_fat7naik1::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DFN  -DONEMASS" \
	"GAUGE = plaquette_action.h" \
	"QUARK = fat7naik_action.h" \
	"EXTRA_OBJECTS= ${INV_FN_OBJECTS} \
	fermion_force_general.o update_onemass.o"

su3_rmd_symzk1_naik::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DFN " \
	"GAUGE = symanzik_1loop_action.h" \
	"QUARK = naik_action.h" \
	"EXTRA_OBJECTS= ${INV_FN_OBJECTS} \
	fermion_force_general.o"

su3_rmd_eo_symzk1_p4::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DEO " \
	"GAUGE = symanzik_1loop_action.h" \
	"QUARK = p4_action.h" \
	"EXTRA_OBJECTS= ${INV_FN_OBJECTS} ${ASQFORCE} \
	 fermion_force_general.o"

clean:
	-/bin/rm -f *.o

# Rules for generic routines
include ../generic/Make_template

# Rules for generic_ks routines
include ../generic_ks/Make_template

libmake:
	@echo Building libraries with ${MAKELIBRARIES}
	cd ${LIBDIR} ;\
	${MAKE} -f ${MAKELIBRARIES} "APP_CC=${CC}" "PRECISION=${PRECISION}" all

localmake: ${OBJECTS} ${LIBRARIES}
	${LD} -o ${MYTARGET} ${LDFLAGS} \
	${OBJECTS} ${QCDLIB} ${ILIB} -lm
	touch localmake

target: libmake localmake 

