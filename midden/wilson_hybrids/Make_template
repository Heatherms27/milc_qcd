#  Makefile for the hybrid mesons with Wilson fermions
#  MIMD version 6
#  Makefile for a generic workstation
#
#  Generic make-include file for wilson_hybrids codes
#  This template file defines rules and macros common to all architectures
#  It is intended to be an include file for other Makefiles.
#  Don't use it by itself!
#
#	"make su3_wil_hybrids" makes the code for hybrid mesons-obsolete
#	"make hyb_bicg_fat" uses biconjugate gradient algorithm, lean
#	dslash, but all vectors used in congrad{}.
#
#  in all cases, defining "LU" causes the dynamical fermion matrix
#  to be the LU preconditioned matrix, on even sites only.
#  Edit the Makefiles to change this.
#

MYINCLUDEDIR = .
INCLUDEDIR = ../include
#Where the complex and su3 libraries are
LIBDIR = ../libraries

GLOBAL_HEADERS = \
  ${INCLUDEDIR}/config.h \
  ${INCLUDEDIR}/complex.h \
  ${INCLUDEDIR}/su3.h \
  ${INCLUDEDIR}/comdefs.h \
  ${INCLUDEDIR}/macros.h \
  ${INCLUDEDIR}/generic.h \
  ${INCLUDEDIR}/generic_quark_types.h \
  ${INCLUDEDIR}/generic_wilson.h \
  ${INCLUDEDIR}/io_lat.h

MY_HEADERS = \
  lattice.h \
  params.h \
  defines.h \
  wi_hyb_includes.h

HEADERS = ${GLOBAL_HEADERS} ${MY_HEADERS}

# Choose one of the lattice layout algorithms:
LAYOUT = layout_hyper

# All required object files
# Basic set from current directory
MY_OBJECTS =  \
  control.o \
  gauge_info.o \
  setup.o \
  spectrum_hybrids4a.o
# Basic set from generic directory
G_OBJECTS = \
  ape_smear.o \
  check_unitarity.o \
  d_plaq4.o \
  f_measure3.o \
  field_strength.o \
  gaugefix2.o \
  io_helpers.o \
   \
  ${LAYOUT}.o \
  make_lattice.o \
  project_su3_hit.o \
  ranstuff.o  \
  reunitarize2.o
# Basic set from generic_wilson directory
G_WILSON_OBJECTS =    \
  boundary_flip.o     \
  mrilu_w_or.o        \
  d_cgilu_w_lean.o


# To these we add project-specific extra objects and machine-dependent objects
OBJECTS = ${MY_OBJECTS} ${G_OBJECTS} ${G_WILSON_OBJECTS} \
  ${EXTRA_OBJECTS} ${MACHINE_DEP}

#Libraries for complex numbers and su3 functions
QCDLIB = ${LIBDIR}/su3.a ${LIBDIR}/complex.a

.c.o: ; ${CC} -c ${CFLAGS} $*.c 

# To force a full remake when changing targets
LASTMAKE = .lastmake.${MAKEFILE}.${MYTARGET}

${LASTMAKE}:
	-/bin/rm -f .lastmake.*
	${MAKE} -f ${MAKEFILE} clean
	touch ${LASTMAKE}

# To force a remake when changing make files
ALL_MAKES = Make_template ../generic/Make_template \
  ../generic_wilson/Make_template ${MAKEFILE} ../include/Make_template

# All objects should depend on these
ALL_DEPEND = ${LASTMAKE} ${HEADERS} ${ALL_MAKES}

${OBJECTS}: ${ALL_DEPEND}

##### Targets:
# Optional DEFINES for timing:
# -DCGTIME for cg timing and iterations

# Kept for completeness.  Does not compile!
su3_wil_hybrids::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DLU -Dmat_invert=mat_invert_cgilu" \
	"EXTRA_OBJECTS= d_congrad2.o dslash_lean.o"

# Kept for completeness.  Does not compile!
su3_cg_hybrids::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DLU -DLEAN -Dmat_invert=mat_invert_cgilu" \
	"EXTRA_OBJECTS= dslash_lean.o"

# Kept for completeness.  Does not compile!
su3_mr_hybrids::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DLU -DLEAN -Dmat_invert=mat_invert_mrilu" \
	"EXTRA_OBJECTS= dslash_lean.o"

# Kept for completeness.  Does not compile!
su3_bicg_hybrids::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DLU -DLEAN -DBICONGRAD -Dmat_invert=mat_invert_bicgilu" \
	"EXTRA_OBJECTS= dslash_lean.o d_bicgilu_w_lean.o"

hyb_bicg_smear::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DLU -DLEAN -DBICONGRAD -Dmat_invert=mat_invert_bicgilu -DSMEAR=1" \
	"EXTRA_OBJECTS= dslash_lean.o d_bicgilu_w_lean.o smear_links_space.o"

hyb_bicg_fat::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DLU -DBICONGRAD -Dmat_invert=mat_invert_bicgilu -DSMEAR=1" \
	"EXTRA_OBJECTS= dslash_w.o d_bicgilu_w_lean.o smear_links_space.o"

clean:
	-/bin/rm -f *.o

# Rules for generic routines
include ../generic/Make_template

# Rules for generic_wilson routines
include ../generic_wilson/Make_template

# Rules for header files
include ../include/Make_template

libmake:
	@echo Building libraries with ${MAKELIBRARIES}
	cd ${LIBDIR} ;\
	${MAKE} -f ${MAKELIBRARIES} "APP_CC=${CC}" all

localmake: ${OBJECTS} ${QCDLIB}
	${LD} ${LDFLAGS} -o ${MYTARGET} \
	${OBJECTS} ${QCDLIB} ${ILIB} -lm
	touch localmake

target: libmake localmake 
