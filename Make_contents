# This file is for inclusion in Make_tar and Make_unpack_*
# It is not intended to be run stand-alone
# 8/9/02 C. DeTar

#  Change these names to suit
VER = 7.0.11-alpha
NAME_ROOT = milc_qcd-${VER}
RELEASE_NAME_ROOT = ${NAME_ROOT}_release
WORK_NAME_ROOT = ${NAME_ROOT}

######################################################################
# Release table of contents 
# This is intended to be a more restrictive list with
# only the code suited for general use

THIS_DIR =             \
 getints.sh            \
 Make_linux_mpi	       \
 Make_linux_qmp	       \
 Make_sample_template  \
 Make_tar	       \
 Make_test_release     \
 Make_test_template    \
 Make_time_release     \
 Make_time_template    \
 Make_vanilla          \
 README                \
 diffn.pl              \
 headtail.pl

DOC = \
 doc/Makefile           \
 doc/milcv6.texi        \
 doc/port_notes.txt

FILE_UTILITIES =        \
 file_utilities/Make*   \
 file_utilities/*.c     \
 file_utilities/*.h

BINARY_SAMPLES =          \
 binary_samples/lat.sample*    \
 binary_samples/lprop.*sample* \
 binary_samples/in.sample.*smear*

INCLUDE = \
 include/Make*        \
 include/*.h

GENERIC =              \
 generic/Make*         \
 generic/*.c           \
 generic/*.h           \
 generic/imp_actions/*.h

GENERIC_CLOVER =          \
 generic_clover/Make*     \
 generic_clover/*.c       \
 generic_clover/*.h       \
 generic_clover/utilities/Make*  \
 generic_clover/utilities/*.c

GENERIC_KS =              \
 generic_ks/Make*         \
 generic_ks/*.c           \
 generic_ks/*.h

GENERIC_PG =              \
 generic_pg/Make*         \
 generic_pg/*.c           \
 generic_pg/*.h

GENERIC_WILSON =              \
 generic_wilson/Make*         \
 generic_wilson/*.c           \
 generic_wilson/*.h

LIBRARIES =             \
 libraries/*.c          \
 libraries/*.h          \
 libraries/*.m4         \
 libraries/*.rs6k       \
 libraries/*.t3d        \
 libraries/*.t3e        \
 libraries/*.alpha      \
 libraries/Make*        \
 libraries/README*

CLOVER_DYNAMICAL =                 \
 clover_dynamical/*.c              \
 clover_dynamical/*.h              \
 clover_dynamical/Make*            \
 clover_dynamical/in.sample*       \
 clover_dynamical/out.sample*      \
 clover_dynamical/out.errtol*

CLOVER_INVERT =                 \
 clover_invert/*.c              \
 clover_invert/*.h              \
 clover_invert/Make*            \
 clover_invert/in.sample*       \
 clover_invert/in.time*         \
 clover_invert/out.sample*      \
 clover_invert/out.errtol*

HVY_QPOT =                 \
 hvy_qpot/README           \
 hvy_qpot/*.c              \
 hvy_qpot/*.h              \
 hvy_qpot/Make*            \
 hvy_qpot/in.sample*       \
 hvy_qpot/out.sample*      \
 hvy_qpot/out.errtol*

KS_DYNAMICAL =                 \
 ks_dynamical/*.c              \
 ks_dynamical/*.h              \
 ks_dynamical/Make*            \
 ks_dynamical/in.sample*       \
 ks_dynamical/in.time*         \
 ks_dynamical/out.errtol*     \
 ks_dynamical/out.sample*

PURE_GAUGE =                 \
 pure_gauge/*.c              \
 pure_gauge/*.h              \
 pure_gauge/Make*            \
 pure_gauge/in.sample*       \
 pure_gauge/out.errtol*     \
 pure_gauge/out.sample*

WILSON_DYNAMICAL =                 \
 wilson_dynamical/*.c              \
 wilson_dynamical/*.h              \
 wilson_dynamical/Make*            \
 wilson_dynamical/in.sample*       \
 wilson_dynamical/out.errtol*     \
 wilson_dynamical/out.sample*

# We split up the release into manageable components

RELEASE_BASIC =     \
 ${THIS_DIR}        \
 ${DOC}             \
 ${FILE_UTILITIES}  \
 ${BINARY_SAMPLES}  \
 ${GENERIC}         \
 ${INCLUDE}         \
 ${LIBRARIES}

RELEASE_KS =        \
 ${GENERIC_KS}      \
 ${KS_DYNAMICAL}

RELEASE_PG = \
 ${GENERIC_PG} \
 ${PURE_GAUGE} \
 ${HVY_QPOT}

RELEASE_WILSON =    \
 ${GENERIC_WILSON}  \
 ${WILSON_DYNAMICAL}

RELEASE_CLOVER =    \
 ${GENERIC_CLOVER}  \
 ${CLOVER_DYNAMICAL} \
 ${CLOVER_INVERT}

# The names of the component tar files

RELEASE_BASIC_TAR  = ${RELEASE_NAME_ROOT}_basic.tar
RELEASE_PURE_GAUGE_TAR  = ${RELEASE_NAME_ROOT}_pure_gauge.tar
RELEASE_KS_TAR     = ${RELEASE_NAME_ROOT}_ks.tar
RELEASE_WILSON_TAR = ${RELEASE_NAME_ROOT}_wilson.tar
RELEASE_CLOVER_TAR = ${RELEASE_NAME_ROOT}_clover.tar

# The combined tar files

RELEASE_TAR = \
 ${RELEASE_BASIC_TAR}  \
 ${RELEASE_PURE_GAUGE_TAR}  \
 ${RELEASE_KS_TAR}     \
 ${RELEASE_WILSON_TAR} \
 ${RELEASE_CLOVER_TAR}

# Contents of the whole ball of wax

RELEASE =              \
 README_UNPACK_RELEASE  \
 Make_contents          \
 Make_unpack_release    \
 ${RELEASE_TAR}

######################################################################
######################################################################
# Working code table of contents
# This list is intended to be all-inclusive

WORK_THIS_DIR =         \
 getints.sh             \
 Make*                  \
 README                 \
 README_RELEASE_NOTES   \
 cc.pl                  \
 diffn.pl               \
 diffn3.pl              \
 seterrfile.pl          \
 headtail.pl            \
 convert_f2d.sh         \
 todo

WORK_DOC =              \
 doc/Makefile           \
 doc/milcv6.texi        \
 doc/port_notes.txt

WORK_LIBRARIES =        \
 libraries/*.c          \
 libraries/*.h          \
 libraries/*.m4         \
 libraries/*.rs6k       \
 libraries/*.t3d        \
 libraries/*.t3e        \
 libraries/*.alpha      \
 libraries/Make*        \
 libraries/README*

WORK_FILE_UTILITIES =     \
 file_utilities/Make*     \
 file_utilities/*.c       \
 file_utilities/*.h       \
 file_utilities/in.sample.* \
 file_utilities/out.errtol.* \
 file_utilities/out.sample.*

WORK_BINARY_SAMPLES =      \
 binary_samples/colormatrix.*sample* \
 binary_samples/lat.sample*    \
 binary_samples/lprop.*sample* \
 binary_samples/in.sample.*smear* \
 binary_samples/ksprop*.sample.* \
 binary_samples/ksvector.*sample.* \
 binary_samples/wprop*.sample.* \
 binary_samples/smear*.sample.*

WORK_INCLUDE =        \
 include/Make*        \
 include/*.h

WORK_GENERIC =        \
 generic/Make*        \
 generic/*.c          \
 generic/*.h          \
 generic/imp_actions/*.h

WORK_GENERIC_KS =     \
 generic_ks/Make*     \
 generic_ks/*.c       \
 generic_ks/*.h       \
 generic_ks/imp_actions/README \
 generic_ks/imp_actions/*.h

WORK_GENERIC_PG =     \
 generic_pg/Make*     \
 generic_pg/*.c       \
 generic_pg/*.h

WORK_GENERIC_SCHROED =         \
 generic_schroed/Make*         \
 generic_schroed/*.c           \
 generic_schroed/*.h

WORK_GENERIC_WILSON =     \
 generic_wilson/Make*     \
 generic_wilson/*.c       \
 generic_wilson/*.h

WORK_GENERIC_CLOVER =          \
 generic_clover/Make*     \
 generic_clover/*.c       \
 generic_clover/*.h       \
 generic_clover/utilities/Make*  \
 generic_clover/utilities/*.c

WORK_GENERIC_FORM =     \
 generic_form/Make*     \
 generic_form/*.c       \
 generic_form/*.h

WORK_ARB_DIRAC_EIGEN =          \
 arb_dirac_eigen/README         \
 arb_dirac_eigen/*.c            \
 arb_dirac_eigen/*.h            \
 arb_dirac_eigen/Make*          \
 arb_dirac_eigen/in.sample*     \
 arb_dirac_eigen/out.errtol*     \
 arb_dirac_eigen/out.sample*

WORK_ARB_DIRAC_INVERT =          \
 arb_dirac_invert/README         \
 arb_dirac_invert/*.c            \
 arb_dirac_invert/*.h            \
 arb_dirac_invert/Make*          \
 arb_dirac_invert/in.sample*     \
 arb_dirac_invert/out.errtol*     \
 arb_dirac_invert/out.sample*

WORK_CLOVER_DYNAMICAL =          \
 clover_dynamical/*.c            \
 clover_dynamical/*.h            \
 clover_dynamical/Make*          \
 clover_dynamical/in.sample*     \
 clover_dynamical/out.errtol*     \
 clover_dynamical/out.sample*

WORK_CLOVER_HYBRIDS =            \
 clover_hybrids/*.c              \
 clover_hybrids/*.h              \
 clover_hybrids/Make*            \
 clover_hybrids/in.sample*       \
 clover_hybrids/out.errtol*     \
 clover_hybrids/out.sample*

WORK_CLOVER_INVERT =            \
 clover_invert/*.c              \
 clover_invert/*.h              \
 clover_invert/Make*            \
 clover_invert/in.sample*       \
 clover_invert/in.time*         \
 clover_invert/out.errtol*     \
 clover_invert/out.sample*

WORK_DENSE_STATIC_SU3 =           \
 dense_static_su3/*.c             \
 dense_static_su3/*.h             \
 dense_static_su3/Make*     

WORK_H_DIBARYON =            \
 h_dibaryon/*.c              \
 h_dibaryon/*.h              \
 h_dibaryon/Make*            \
 h_dibaryon/in.sample*       \
 h_dibaryon/out.errtol*     \
 h_dibaryon/out.sample*

WORK_HEAVY        =   \
 heavy/Make*          \
 heavy/*.c            \
 heavy/*.h            \
 heavy/in.sample*     \
 heavy/out.errtol*    \     \
 heavy/out.sample*    \
 heavy/utilities/*.c  \
 heavy/utilities/*.h  \
 heavy/utilities/Make* \
 heavy/utilities/in.sample*

WORK_HQET_HEAVY_TO_LIGHT =          \
 hqet_heavy_to_light/*.c            \
 hqet_heavy_to_light/*.h            \
 hqet_heavy_to_light/Make*          \
 hqet_heavy_to_light/in.sample*     \
 hqet_heavy_to_light/out.errtol*     \
 hqet_heavy_to_light/out.sample*

WORK_HVY_QPOT     =   \
 hvy_qpot/README      \
 hvy_qpot/Make*       \
 hvy_qpot/*.c         \
 hvy_qpot/*.h         \
 hvy_qpot/in.sample.* \
 hvy_qpot/out.errtol*     \
 hvy_qpot/out.sample*

WORK_KS_DYNAMICAL =          \
 ks_dynamical/*.c            \
 ks_dynamical/*.h            \
 ks_dynamical/Make*          \
 ks_dynamical/in.sample*     \
 ks_dynamical/in.time*       \
 ks_dynamical/out.errtol*     \
 ks_dynamical/out.sample*

WORK_KS_EIGEN =          \
 ks_eigen/README*        \
 ks_eigen/*.c            \
 ks_eigen/*.h            \
 ks_eigen/Make*          \
 ks_eigen/in.sample*     \
 ks_eigen/out.errtol*     \
 ks_eigen/out.sample*

WORK_KS_HL_SPECTRUM =    \
 ks_hl_spectrum/*.c            \
 ks_hl_spectrum/*.h            \
 ks_hl_spectrum/Make*          \
 ks_hl_spectrum/in.sample*     \
 ks_hl_spectrum/out.errtol*     \
 ks_hl_spectrum/out.sample*

WORK_KS_IMP_DYN1 =           \
 ks_imp_dyn1/README          \
 ks_imp_dyn1/*.c             \
 ks_imp_dyn1/*.h             \
 ks_imp_dyn1/Make*           \
 ks_imp_dyn1/in.sample*      \
 ks_imp_dyn1/out.errtol*     \
 ks_imp_dyn1/out.sample*

WORK_KS_IMP_DYN2 =           \
 ks_imp_dyn2/README          \
 ks_imp_dyn2/*.c             \
 ks_imp_dyn2/*.h             \
 ks_imp_dyn2/Make*           \
 ks_imp_dyn2/in.sample*      \
 ks_imp_dyn2/in.time*        \
 ks_imp_dyn2/out.errtol*     \
 ks_imp_dyn2/out.sample*

WORK_KS_IMP_UTILITIES =           \
 ks_imp_utilities/*.c             \
 ks_imp_utilities/*.h             \
 ks_imp_utilities/Make*           \
 ks_imp_utilities/in.sample*      \
 ks_imp_utilities/out.errtol*     \
 ks_imp_utilities/out.sample*

WORK_KS_IMP_INVERT_MULTI =           \
 ks_imp_invert_multi/*.c             \
 ks_imp_invert_multi/*.h             \
 ks_imp_invert_multi/Make*           \
 ks_imp_invert_multi/in.sample*      \
 ks_imp_invert_multi/out.errtol*     \
 ks_imp_invert_multi/out.sample*

WORK_PROPAGATING_FORM_FACTOR =          \
 propagating_form_factor/*.c            \
 propagating_form_factor/*.h            \
 propagating_form_factor/Make*          \
 propagating_form_factor/in.sample*     \
 propagating_form_factor/out.errtol*    \     \
 propagating_form_factor/out.sample*    \
 propagating_form_factor/scripts/*       \
 propagating_form_factor/utilities/*.c  \
 propagating_form_factor/utilities/*.h  \
 propagating_form_factor/utilities/Make* \
 propagating_form_factor/utilities/in.sample*

WORK_PURE_GAUGE =          \
 pure_gauge/*.c            \
 pure_gauge/*.h            \
 pure_gauge/Make*          \
 pure_gauge/in.sample*     \
 pure_gauge/out.errtol*     \
 pure_gauge/out.sample*

WORK_SCHROED_CL_INV =          \
 schroed_cl_inv/*.c            \
 schroed_cl_inv/*.h            \
 schroed_cl_inv/Make*          \
 schroed_cl_inv/in.sample*     \
 schroed_cl_inv/out.errtol*     \
 schroed_cl_inv/out.sample*

WORK_SCHROED_KS_DYN =          \
 schroed_ks_dyn/*.c            \
 schroed_ks_dyn/*.h            \
 schroed_ks_dyn/Make*          \
 schroed_ks_dyn/in.sample*     \
 schroed_ks_dyn/out.errtol*     \
 schroed_ks_dyn/out.sample*

WORK_SCHROED_PG =          \
 schroed_pg/*.c            \
 schroed_pg/*.h            \
 schroed_pg/Make*          \
 schroed_pg/in.sample*     \
 schroed_pg/out.errtol*     \
 schroed_pg/out.sample*

WORK_SMOOTH_INST =         \
 smooth_inst/README*       \
 smooth_inst/*.c           \
 smooth_inst/*.c.unused    \
 smooth_inst/*.h           \
 smooth_inst/Make*         \
 smooth_inst/in.sample*    \
 smooth_inst/out.errtol*   \     \
 smooth_inst/out.sample*   \
 smooth_inst/utilities/*.c \
 smooth_inst/utilities/Make_utilities

WORK_STRING_BREAK =          \
 string_break/*.c            \
 string_break/*.h            \
 string_break/Make*          \
 string_break/in.sample*     \
 string_break/out.errtol*     \
 string_break/out.sample*

WORK_SYMANZIK_SL32 =         \
 symanzik_sl32/*.c           \
 symanzik_sl32/*.h           \
 symanzik_sl32/Make*         \
 symanzik_sl32/in.sample*    \
 symanzik_sl32/out.errtol*     \
 symanzik_sl32/out.sample*

WORK_WILSON_DYNAMICAL =          \
 wilson_dynamical/*.c            \
 wilson_dynamical/*.h            \
 wilson_dynamical/Make*         \
 wilson_dynamical/in.sample*     \
 wilson_dynamical/out.errtol*     \
 wilson_dynamical/out.sample*

WORK_WILSON_STATIC        =   \
 wilson_static/Make*          \
 wilson_static/*.c            \
 wilson_static/*.h            \
 wilson_static/in.sample*     \
 wilson_static/out.errtol*    \     \
 wilson_static/out.sample*    \
 wilson_static/read_matrix_code/Make* \
 wilson_static/read_matrix_code/*.c \
 wilson_static/matrix_to_corr/Make* \
 wilson_static/matrix_to_corr/*.c \
 wilson_static/matrix_to_corr/*.h \

# We split up the archive into manageable components

WORK_BASIC =               \
 ${WORK_THIS_DIR}          \
 ${WORK_DOC}               \
 ${WORK_FILE_UTILITIES}    \
 ${WORK_BINARY_SAMPLES}    \
 ${WORK_GENERIC}           \
 ${WORK_INCLUDE}           \
 ${WORK_LIBRARIES}         \
 ${WORK_SSE}               \
 ${WORK_SSE2}            

WORK_SSE =               \
 sse/README_SSE          \
 sse/include/*.h         \
 sse/include/Makefile    \
 sse/nas/*.s             \
 sse/bin/*.pl

WORK_SSE2 =              \
 sse2/README_SSE         \
 sse2/include/*.h        \
 sse2/include/Makefile   \
 sse2/nas/*.s            \
 sse2/bin/*.pl

WORK_PG =          \
 ${WORK_GENERIC_PG}        \
 ${WORK_PURE_GAUGE}        \
 ${WORK_HVY_QPOT}

WORK_CLOVER =              \
 ${WORK_GENERIC_CLOVER}    \
 ${WORK_CLOVER_DYNAMICAL}  \
 ${WORK_CLOVER_HYBRIDS}    \
 ${WORK_CLOVER_INVERT}     \
 ${WORK_H_DIBARYON}

WORK_FORM =                \
 ${WORK_KS_HL_SPECTRUM} \

WORK_FP =                  \
 ${WORK_ARB_DIRAC_INVERT}  \
 ${WORK_ARB_DIRAC_EIGEN}   \
 ${WORK_SYMANZIK_SL32}

WORK_INST =                \
 ${WORK_SMOOTH_INST}

WORK_KS =                  \
 ${WORK_GENERIC_KS}        \
 ${WORK_KS_IMP_DYN2}	   \
 ${WORK_KS_IMP_UTILITIES}  \
 ${WORK_KS_IMP_INVERT_MULTI}

WORK_SF =                  \
 ${WORK_GENERIC_SCHROED}   \
 ${WORK_SCHROED_CL_INV}    \
 ${WORK_SCHROED_KS_DYN}    \
 ${WORK_SCHROED_PG}

WORK_WILSON =              \
 ${WORK_GENERIC_WILSON}

# The names of the component tar files

WORK_BASIC_TAR   = ${WORK_NAME_ROOT}_basic.tar
WORK_CLOVER_TAR  = ${WORK_NAME_ROOT}_clover.tar
WORK_FORM_TAR    = ${WORK_NAME_ROOT}_form.tar
WORK_FP_TAR      = ${WORK_NAME_ROOT}_fp.tar
WORK_INST_TAR    = ${WORK_NAME_ROOT}_inst.tar
WORK_KS_TAR      = ${WORK_NAME_ROOT}_ks.tar
WORK_PURE_GAUGE_TAR  = ${WORK_NAME_ROOT}_pure_gauge.tar
WORK_SF_TAR      = ${WORK_NAME_ROOT}_sf.tar
WORK_WILSON_TAR  = ${WORK_NAME_ROOT}_wilson.tar

# The combined tar file

WORK_TAR =          \
 ${WORK_BASIC_TAR}  \
 ${WORK_KS_TAR}     \
 ${WORK_FORM_TAR}   \
 ${WORK_WILSON_TAR}

# Contents of the whole ball of wax

WORK =              \
 README_UNPACK      \
 Make_contents      \
 Make_unpack        \
 ${WORK_TAR}

