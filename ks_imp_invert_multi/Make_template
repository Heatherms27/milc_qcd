#  Kogut-Susskind fermions with improved actions
#  MIMD version 6
#  "ks_imp3", started 1/22/99, streamline ks_imp2
#
#  Generic make-include file for ks_imp3 codes
#  This template file defines rules and macros common to all architectures
#  It is intended to be an include file for other Makefiles.
#  Don't use it by itself!
#
#	"make su3_rmd_eo" used the refreshed molecular dynamics algorithm
#		for general "even-odd" dslash operator
#	"make su3_rmd_fn" used the refreshed molecular dynamics algorithm
#		for general fat one link plus Naik connections
#		("fn" = "fat+Naik")
#	"make su3_hmc_eo" used the hybrid Monte Carlo algorithm
#		for general "even-odd" dslash operator
#	"make su3_hmc_fn" used the hybrid Monte Carlo algorithm
#		for general fat one link plus Naik connections
#	"make su3_rmd_spectrum_eo" uses the refreshed molecular dynamics
#		algorithm and does spectrum measurements
#	"make su3_rmd_spectrum_fn" uses the refreshed molecular dynamics
#		algorithm and does spectrum measurements

MYINCLUDEDIR = .
INCLUDEDIR = ../include
#Where the complex and su3 libraries are
LIBDIR = ../libraries

GLOBAL_HEADERS = ${INCLUDEDIR}

INLINE_HEADERS = \
  ../sse/include/ \
  ../sse2/include/ \
  ../libraries/include/

MY_HEADERS = \
  lattice.h \
  params.h \
  defines.h \
  ks_imp_includes.h

HEADERS = ${GLOBAL_HEADERS} ${MY_HEADERS} ${INLINE_HEADERS} ${SCIDAC_HEADERS}

MY_OBJECTS= \
   control.o \
   gauge_info.o \
   ksprop_info.o \
   setup.o 

G_OBJECTS0= \
   check_unitarity.o \
   d_plaq4.o \
   gaugefix2.o \
   io_helpers.o \
   io_lat4.o \
   io_lat_utils.o \
   make_lattice.o \
   path_product.o \
   ranstuff.o \
   reunitarize2.o

ifeq ($(strip ${QCDOC}),true)
  G_OBJECTS1 = ${G_OBJECTS0} ploop2.o
else
  G_OBJECTS1 = ${G_OBJECTS0} ploop3.o
endif

ifeq ($(strip ${HAVEQIO}),true)
  G_OBJECTS = ${G_OBJECTS1} io_scidac.o
else
  G_OBJECTS = ${G_OBJECTS1}
endif

G_KS_OBJECTS0= \
   gauge_stuff.o \
   quark_stuff.o \
   io_detect.o \
   io_helpers_ks.o \
   io_prop_ks.o \
   io_prop_ks_fm.o \
   mat_invert.o \
   multimass_inverter.o \
   rephase.o

ifeq ($(strip ${HAVEQIO}),true)
  G_KS_OBJECTS = ${G_KS_OBJECTS0} io_scidac_ks.o
else
  G_KS_OBJECTS = ${G_KS_OBJECTS0}
endif

# Objects depending on architecture and software package 

# Layout
ifeq ($(strip ${QCDOC}),true)
  LAYOUT = layout_qcdoc.o # Required
else
  ifeq ($(strip ${HAVEQDP}),true)
    LAYOUT = layout_qdp.o # Required
  else
    LAYOUT = layout_hyper_prime.o # Choices possible here
  endif
endif

# Choose dslash (dslash_fn.o dslash_fn2.o)
DSLASH_FN = dslash_fn.o  # Or dslash_fn2.o

# Choose Asqtad fermion force 
# (fermion_force_asqtad.o fermion_force_asqtad2.o fermion_force_asqtad_qdp.o)
ASQFORCE = fermion_force_asqtad2.o

ifeq ($(strip ${QCDOC}),true)
  QCDOC_OBJECTS = qcdoc_alloc.o
endif

ifeq ($(strip ${HAVEQDP}),true)
  QDP_OBJECTS = stuff_qdp.o
  INV_FN_OBJECTS = d_congrad5_fn_qdp.o ${DSLASH_FN} dslash_fn_qdp.o 
  MULTI_INV_FN = ks_multicg_qdp.o
else
  INV_FN_OBJECTS = d_congrad5_fn.o ${DSLASH_FN}
  MULTI_INV_FN = ks_multicg.o
endif
MULTI_INV_EO = ks_multicg.o

ADD_OBJECTS = ${MACHINE_DEP_IO} ${COMMPKG} ${QCDOC_OBJECTS} ${QDP_OBJECTS} \
   ${SCIDAC_OBJECTS}

OBJECTS = ${MY_OBJECTS} ${G_OBJECTS} ${G_KS_OBJECTS} ${LAYOUT} \
  ${ADD_OBJECTS} ${EXTRA_OBJECTS}

#Libraries for complex numbers and su3 functions
QCDLIB = ${LIBDIR}/su3.${PRECISION}.a ${LIBDIR}/complex.${PRECISION}.a 

LIBRARIES = ${QCDLIB} ${SCIDAC_LIBRARIES}

# Default rule for C compilation
.c.o: ; ${CC} -c ${CFLAGS}  $*.c 

# To force a full remake when changing targets
LASTMAKE = .lastmake.${MAKEFILE}.${PRECISION}.${MYTARGET}

${LASTMAKE}:
	-/bin/rm -f .lastmake.*
	/bin/rm -f .lastmake.* quark_action.h gauge_action.h
	${MAKE} -f ${MAKEFILE} clean
	touch ${LASTMAKE}

ALL_MAKES = \
   Make_template \
   ${MAKEFILE} \
   ../Make_template_scidac \
   ../generic/Make_template \
   ../generic_ks/Make_template

# To force a remake when changing any make file, header, or target
${OBJECTS} : ${HEADERS} ${LASTMAKE} ${ALL_MAKES}

quark_stuff.o: quark_action.h
gauge_stuff.o: gauge_action.h 
gauge_info.o:  quark_action.h

# Directories where we store the improved action headers
QUARKIMP = ../generic_ks/imp_actions
GAUGEIMP = ../generic/imp_actions

quark_action.h: ${QUARKIMP}/${QUARK}
	/bin/cp ${QUARKIMP}/${QUARK} quark_action.h

gauge_action.h: ${GAUGEIMP}/${GAUGE}
	/bin/cp ${GAUGEIMP}/${GAUGE} gauge_action.h


########################################################
# Optional DEFINES for timing:
# -DCGTIME for cg timing and iterations
# -DGFTIME for gauge force timing
# -DFFTIME for fermion force timing
# -DLLTIME for long link timing

# Optional DEFINES for pbp estimates
# -DNPBP_REPS Number of repeated evaluations of stochastic 
#       psi-bar-psi

ifeq ($(strip ${QCDOC}),true)
  DQCDOC = -DQCDOC
endif

ifeq ($(strip ${HAVEQIO}),true)
  DHAVE_QIO = -DHAVE_QIO
endif

ifeq ($(strip ${HAVEQDP}),true)
  DHAVE_QDP = -DHAVE_QDP
endif

DARCH = ${DQCDOC} ${DHAVE_QIO} ${DHAVE_QDP}

##### Targets:
#		("FN" = "fat+Naik")
# 	-DCGTIME -DFFTIME -DGFTIME -DLLTIME" \

su3_spectrum::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DFN -DFPI ${DARCH}	" \
	"GAUGE = symanzik_1loop_action.h" \
	"QUARK = asqtad_action.h" \
	"EXTRA_OBJECTS= ${INV_FN_OBJECTS} ${MULTI_INV_FN} \
	${ASQFORCE}  fpi_2.o"

su3_spectrum_periodic::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DFN ${DARCH} -DPERIODICBC" \
	"GAUGE = symanzik_1loop_action.h" \
	"QUARK = asqtad_action.h" \
	"EXTRA_OBJECTS= ${INV_FN_OBJECTS} ${MULTI_INV_FN} \
	 ${ASQFORCE}"

su3_unimp_spectrum_periodic::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DFN -DPERIODICBC" \
	"GAUGE = plaquette_action.h" \
	"QUARK = onelink_action.h" \
	"EXTRA_OBJECTS= ${INV_FN_OBJECTS} ${MULTI_INV_FN}"

clean:
	-/bin/rm -f *.o

# Rules for generic routines
include ../generic/Make_template

# Rules for generic_ks routines
include ../generic_ks/Make_template

libmake:
	@echo Building libraries with ${MAKELIBRARIES}
	cd ${LIBDIR} ;\
	${MAKE} -f ${MAKELIBRARIES} "APP_CC=${CC}" "PRECISION=${PRECISION}" all

localmake: ${OBJECTS} ${LIBRARIES}
	${LD} ${LDFLAGS} -o ${MYTARGET} \
	${OBJECTS} ${QCDLIB} ${ILIB} -lm
	touch localmake

target: libmake localmake 

